clone_folder: c:\projects\deploid-py
image:
  #- Visual Studio 2015
  # if 2015 works, this should work too
  - Visual Studio 2017
configuration:
  - Release
platform:
  - x64
environment:
  global:
    ZLIB_ROOT: C:\projects\deploid-py\zlib\myinstall\
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    WITH_COMPILER: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_compiler.cmd"

  matrix:
    - PYTHON: "C:\\Miniconda35-x64"
      ZLIB_VERSION: 1.2.11

    #- PYTHON: "C:\\Miniconda35"

    #- PYTHON: "C:\\Miniconda36-x64"

    #- PYTHON: "C:\\Miniconda36"

install:
  - "powershell appveyor\\install.ps1"
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  - "git submodule update --init --recursive"

  - IF "%PLATFORM%" == "x86" ( SET CMAKE_GENERATOR="Visual Studio 14 2015")
  - IF "%PLATFORM%" == "x64" ( SET CMAKE_GENERATOR="Visual Studio 14 2015 Win64")

  - echo %PLATFORM%
  - echo %CMAKE_GENERATOR%
  - echo %configuration%
  - echo %APPVEYOR_BUILD_FOLDER%
  - echo %cd%
  # zlib
  # TODO check out http://stackoverflow.com/questions/10507893/libzip-with-visual-studio-2010
  - cd C:\projects\deploid-py
  - git clone https://github.com/madler/zlib
  - cd zlib
  - git checkout v1.2.8
  - echo %cd%
  - mkdir build
  - mkdir myinstall
  - cd build
  - cmake -G %CMAKE_GENERATOR% -DCMAKE_INSTALL_PREFIX=%ZLIB_ROOT% ..
  - cmake --build . --config %CONFIGURATION%
  - cmake --build . --config %CONFIGURATION% --target install
  - dir ..\myinstall\
  - cd C:\projects\deploid-py
  - dir lib\src\
  - dir lib\src\lasso\

build: false

test_script:
  - "conda config --add channels conda-forge"
  - "conda install --yes --file=requirements.txt"

  # There seems to be an issue here, where we're not using the correct
  # version of Python.
  - "SET ZLIB_PREFIX=%ZLIB_ROOT%"
  - "python setup.py build_ext --inplace"
  - "nosetests -vs"

after_test:
  - "python setup.py bdist_wheel"
